Plashy - knowledge is in your head, detail is in the code
> Brain has knowledge, code has details.

Design rules:
1. Only shell commands can overwrite $_
2. Must be quick and easy to develop plugins
3. Must be quick and easy to USE plugins
4. Do simple functions
5. One or two args at most for a plugin command, other stuff in `set' attributes
6. Everything is plugin, like everything is a file in UNIX
7. Performance is not the goal

Usage rules:
1. Three kind of command lines:
- Perl line
- Plashy shell line
- External command

Split Plashy.pm into:
1. Plashy for plashy stuff (lp, global, ...)
2. Plashy::Shell for Term::Shell stuff

staticperl, standalone Perl with libc:
http://search.cpan.org/~mlehmann/App-Staticperl-1.43/

How to launch a process in foreground and move it to background:
IPC::Run
IPC::Run IPC::ChildSafe Proc::Simple Proc::Reliable Proc::Fork
IO::Pipe
IPC::Run::Proc
IPC::Exe
Proc::SafeExec
Forks::Super
Spawn::Safe

shell functions:
export VAR value => $ENV{VAR} = value
unset VAR => undef $ENV{VAR}
=> completion on ENV variables
set $? and $! to indicate error and print error string

Name:
-> Plashy (Perl Awesome|Audit|Attack|All-in-one Shell (Yeaaahh))
-> y: Why the Y? Yeaaaah

write/save: writes $_ content to a file (set out 'file.txt')
set global input $_  # default
set global ouput $_  # default
=> input and ouput may also be plugins

Proc::Simple:
=> launch cmd as background jobs (&)
=> launch system commands as background jobs

show plugins:
[1] XXX loaded
[2] XXX not loaded

Plugins API:
-> default_values() to return a hashref of default values for attributes.
-> require_modules() to eval() required modules for plugins.

Makes use of modules:
File::Spec (path manipulation)
File::Dirname
ExtUtils::Command (shell builtins)
Env::PS1
Text::Balanced
Proc::SafePipe (http://search.cpan.org/~rosch/Proc-SafePipe-0.01/SafePipe.pm)
File::Tools
=> ls, cd, cat, df, ...
Term::ShellKit::Commands
=> reload, load, show methods/functions of a module

Take stuff from pirl:
pirl: http://cpansearch.perl.org/src/RSAVAGE/Shell-Perl-0.0023/lib/Shell/Perl.pm
ipirl: https://code.google.com/p/iperl/

Plugin CVE_NVD:
> http://nvd.nist.gov/download.cfm
> http://static.nvd.nist.gov/feeds/xml/cve/nvdcve-2.0-2014.xml
=> Put in a SQLite DB and allows search.




Gather available methods/functions:
use Plashy::Plugin::Global;

--8<--
my $pkg = "Plashy::Plugin::Global";
no strict 'refs';
my @r = keys %{ $pkg . "::" };
use Data::Dumper;
print Dumper(\@r);
--8<--

