#!/usr/bin/perl
#
# $Id$
#
use strict;
use warnings;

use Getopt::Long;
use FindBin;

use lib ("$FindBin::Bin/../lib", "$FindBin::Bin/../lib/perl5");

$ENV{PERL5LIB} = join(':', @INC);

eval("use Metabrik::Brik::Core::Context;");
if ($@) {
   die("[F] metabrik: you have to set PERL5LIB environment variable like:\n".
       'bash$ export PERL5LIB=/path/to/metabrik/lib'."\n");
}

my $script;
my $rc;
my $verbose = 2;
my $debug = 0;
my $no_splash = 0;
GetOptions(
   "script=s" => \$script,
   "rc=s" => \$rc,
   "verbose=i" => \$verbose,
   "debug=i" => \$debug,
   "no-splash" => \$no_splash,
) or return usage();

my $context = Metabrik::Brik::Core::Context->new;

$context->brik_init
   or die("[F] metabrik: context init: failed\n");

$context->set('core::log', 'level', $verbose);

$context->set('core::log', 'debug', $debug);
$context->set('core::context', 'debug', $debug);
$context->set('core::shell', 'debug', $debug);
$context->set('core::global', 'debug', $debug);

if (defined($script)) {
   $context->use('shell::script')
      or die("[F] metabrik: use: shell::script: failed\n");

   if ($rc) {
      $context->set('shell::rc', 'rc_file', $rc)
   }
   $context->set('shell::script', 'debug', $debug);
   $context->set('shell::script', 'file', $script);

   my $lines = $context->run('shell::script', 'load')
      or die("[F] metabrik: run: shell::script: load: failed\n");

   $context->run('shell::script', 'exec', $lines)
      or die("[F] metabrik: run: shell::script: exec: failed\n");
}
else {
   $context->use('shell::rc')
      or die("[F] metabrik: use: shell::rc: failed\n");

   if ($rc) {
      $context->set('shell::rc', 'rc_file', $rc)
   }
   $context->set('shell::rc', 'debug', $debug);

   unless ($no_splash) {
      $context->run('core::shell', 'splash')
         or die("[F] metabrik: run: core::shell: splash: failed\n");
   }

   $context->run('core::shell', 'cmdloop');
}

exit(0);

sub usage {
   print<<EOF

Usage: metabrik [options]

   --no-splash           don't print the splash screen
   --rc <file>           use specified rc file (default: ~/.metabrik_rc)
   --verbose <0|1|2|3>   verbosity level (default: 2)
   --debug <0|1>         enable debugging (default: 0)

EOF
;
}
