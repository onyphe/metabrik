#!/usr/bin/perl
#
# $Id$
#
use strict;
use warnings;

BEGIN {
   use File::HomeDir;

   my $lib = File::HomeDir->my_home."/perl5/lib/perl5";
   $lib =~ s/\\/\//g; # Converts Windows paths

   eval("use lib \"$lib\";");
   if ($@) {
      chomp($@);
      die("[F] metabrik: unable to use Metabrik libs [$@]\n");
   }
}

use Metabrik::Brik::Core::Context;

my $script = shift;

my $context = Metabrik::Brik::Core::Context->new;
$context->init or return;

my $metabrik_version = $context->get('core::global', 'metabrik_version');

if (defined($script)) {
   $context->use('shell::script') or return;

   #$context->set('shell::script', 'file', $script) or return;
   #$context->set('shell::script', 'debug', 1) or return;
   #$context->set('core::shell', 'debug', 1) or return;

   $context->run('core::shell', 'script', $script) or return;

   # XXX: does not work, to fix
   #my $cmd = $context->run('shell::script', 'load');
   #for (@$cmd) {
      #print "DEBUG cmd[$_]\n";
      #if (/^exit$/) {
         #exit;
      #}
      #$context->run('core::shell', 'cmd', $_);
   #}
}
else {
   $context->use('shell::rc') or return;

   $context->run('core::shell', 'splash');

   print "--[ Welcome to Metabrik - Knowledge is in your head, Detail is in the code ]--\n";
   print "--[ Version $metabrik_version ]--\n";
   print "\n";

   print "    There is a Brik for that.\n\n";

   $context->run('core::shell', 'cmdloop');
}
